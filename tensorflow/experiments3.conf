# Word embeddings.
glove_300d {
  path = ../dataset/glove.840B.300d.txt
  size = 300
}
glove_300d_filtered {
  path = ../dataset/glove.840B.300d.txt.filtered
  size = 300
}
glove_300d_2w {
  path = ../dataset/glove_50_300_2.txt
  size = 300
}

# Distributed training configurations.
two_local_gpus {
  addresses {
    ps = [localhost:2222]
    worker = [localhost:2223]
  }
  gpus = [0]
}

# Main configuration.
best {
  # Computation limits.
  max_top_antecedents = 50
  max_training_sentences = 82
  top_span_ratio = 0.4

  # Model hyperparameters.
  filter_widths = [3, 4, 5]
  filter_size = 40
  char_embedding_size = 8
  char_vocab_path = "../../dataset/char_vocab.english.txt"
  context_embeddings = ${glove_300d_filtered}
  head_embeddings = ${glove_300d_2w}
  contextualization_size = 150
  contextualization_layers = 3
  ffnn_size = 200
  ffnn_depth = 3
  feature_size = 15
  max_span_width = 40
  use_metadata = true
  use_features = true
  model_heads = true
  coref_depth = 2
  lm_layers = 4
  lm_size = 1024
  coarse_to_fine = true
  
  # Learning hyperparameters.
  max_gradient_norm = 5.0
  lstm_dropout_rate = 0.4
  lexical_dropout_rate = 0.5
  dropout_rate = 0.2
  optimizer = adam
  learning_rate = 0.001
  decay_rate = 0.999
  decay_frequency = 100
  bert_folder = "../files/bert_file"

  # Other

  train_path = ../files/new_train.pickle 
  eval_path = ../files/new_test.pickle
  conll_eval_path = ../../dataset/dev.english.v4_gold_conll
  genres = ["bc", "bn", "mz", "nw", "pt", "tc", "wb"]
  eval_frequency = 2000
  report_frequency = 100
  log_root = logs
  cluster = ${two_local_gpus}
}

# For evaluation. Do not use for training (i.e. only for predict.py, evaluate.py, and demo.py). Rename `best` directory to `final`.
final = ${best} {
  context_embeddings = ${glove_300d}
  head_embeddings = ${glove_300d_2w}
  lm_path = ""
  eval_path = ../dataset/test.english.jsonlines
  conll_eval_path = ../dataset/test.english.v4_gold_conll
}

# Baselines.
c2f_100_ant = ${best} {
  max_top_antecedents = 100
}
c2f_250_ant = ${best} {
  max_top_antecedents = 250
}
c2f_1_layer = ${best} {
  coref_depth = 1
}
c2f_3_layer = ${best} {
  coref_depth = 3
}
distance_50_ant = ${best} {
  max_top_antecedents = 50
  coarse_to_fine = false
  coref_depth = 1
}
distance_100_ant = ${distance_50_ant} {
  max_top_antecedents = 100
}
distance_250_ant = ${distance_50_ant} {
  max_top_antecedents = 250
}
